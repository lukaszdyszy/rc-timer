{"version":3,"sources":["components/parseTime.js","components/timer/timer.js","components/header/header.js","components/scrambler/scrambler.js","components/results/results.js","components/average.js","components/mean.js","components/tools/tools.js","components/drawCube/drawCube.js","App.js","serviceWorker.js","index.js"],"names":["parseTime","time","min","Math","floor","sec","ms","timerStatus","beginTime","Timer","props","useState","setTime","className","type","id","onKeyDown","e","keyCode","addTime","onKeyUp","Date","now","runTime","setTimeout","htmlFor","Header","target","href","size","randomize","moves","moveSet","opposites","modes","retString","locked","map","move","i","rnd","random","length","Object","keys","lay","includes","mode","Scrambler","cube","layers","cubic","tipMoves","scramble","pyraminx","Results","markAll","setMarkAll","useEffect","newSolves","solves","solve","marked","updateSolves","checked","onChange","arrToRender","reverse","toRender","index","key","mark","onClick","splice","dropSolve","sol","prompt","solution","showSolution","penalty","dnf","result","average","dnfs","indexOf","sort","a","b","push","sum","mean","Tools","avgOf","nr","times","name","value","defaultValue","sessAvg","sessMean","meanOf","window","confirm","toExport","plus","row","toDown","document","createElement","encodeURI","download","click","DrawCube","createLayer","color","rows","Array","columns","generateCube","copy2d","from","newArr","el","setSize","updateCube","rotate","layer","fromLayer","newLayer","forEach","rIndex","column","cIndex","onCube","deep","tempCube","newF","newR","newB","newL","newU","newD","j","axis","doScramble","scrmbl","mvs","split","pop","mv","parsed","isNaN","parseMove","style","gridTemplateColumns","gridTemplateRows","backgroundColor","App","generateScramble","cubeType","setCubeType","cubeDisplay","setDisplay","cubeShown","setClass","this","display","parseInt","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f90dbe9.chunk.js","sourcesContent":["const parseTime = (time) => {\n    if(typeof(time) != 'number'){\n        return time;\n    } else {\n        let min = Math.floor(time / 60000);\n        let sec = Math.floor((time - min*60000) / 1000);\n        let ms  = Math.floor((time - min*60000 - sec*1000) / 10);\n\n\n        if(min < 1){min = '';}else{min = min+':';}\n        if(sec < 10){sec='0'+sec;}sec=sec+':';\n        if(ms < 10){ms='0'+ms;}\n\n        return min + sec + ms;\n    }\n}\n\nexport default parseTime;","import React, { useState } from 'react';\nimport './timer.css';\nimport parseTime from '../parseTime.js';\n\nlet timerStatus = 'neutral';\nlet beginTime = 0;\nconst Timer = (props) => {\n    let [time, setTime] = useState(0);\n\n    const runTime = () => {\n        if(timerStatus == 'running'){\n            setTime(Date.now()-beginTime);\n            setTimeout(runTime, 10);\n        }\n    }\n\n    const spaceDown = (e) => {\n        if(e.keyCode == 32){\n            if(timerStatus == 'neutral'){\n                timerStatus = 'ready';\n                setTime(0);\n            } else if(timerStatus == 'running'){\n                timerStatus = 'stopped';\n                props.addTime(time);\n            }\n        }\n    }\n\n    const spaceUp = (e) => {\n        if(e.keyCode == 32){\n            if(timerStatus == 'ready'){\n                beginTime = Date.now();\n                timerStatus = 'running';\n                runTime();\n            } else if(timerStatus == 'stopped'){\n                timerStatus = 'neutral';\n            }\n        }\n    }\n\n    return (\n        <div className=\"timer-container\">\n            <input type=\"text\" id=\"time\" onKeyDown={spaceDown} onKeyUp={spaceUp}/>\n            <label htmlFor=\"time\" id=\"time-label\">{ parseTime(time) }</label>\n        </div>\n    )\n}\n\nexport default Timer;","import React from 'react';\nimport './header.css';\nimport { FaGithub } from 'react-icons/fa';\n\nconst Header = () => {\n    return (\n        <div className=\"header-container\">\n            <div className=\"menu\"></div>\n            <div className=\"copyright\">\n                <span className=\"copy\">&copy; Łukasz Dyszy </span>\n                <a className=\"gh\" target=\"blank\" href=\"https://github.com/lukaszdyszy/rc-timer\"><FaGithub size={28}/></a>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","const randomize = (moves, moveSet, opposites, modes) => {\n    let retString = '';\n    let locked = {}\n    moveSet.map((move) => {\n        locked[move] = false;\n    });\n\n    for(let i=0; i<moves; i++)\n    {\n        let rnd;\n        do {\n            rnd = moveSet[Math.floor(Math.random()*moveSet.length)];\n        } while(locked[rnd] == true);\n\n        if(opposites !== 'oneTime'){\n            let lays = Object.keys(locked);\n            lays.map((lay) => {\n                if(opposites == false){\n                    locked[lay] = false;\n                } else {\n                    if(!opposites[lay].includes(rnd)){\n                        locked[lay] = false;\n                    }\n                }\n            });\n        }\n        \n        locked[rnd] = true;\n\n        let mode = Math.floor(Math.random()*modes.length);\n        rnd += modes[mode];\n\n        retString += rnd+' ';\n    }\n\n    return retString;\n}\n\nconst cubic = (cube) => {\n    let scramble = '';\n\n    let layers;\n    let moves;\n    let opposites;\n\n    switch(cube)\n    {\n        case '2x2x2':\n        case '3x3x3': {\n            moves = 25;\n            if(cube=='2x2x2'){moves=9;}\n            layers = ['R', 'L', 'U', 'D', 'F', 'B'];\n            opposites = {\n                'R': ['L'],\n                'L': ['R'],\n                'U': ['D'],\n                'D': ['U'],\n                'F': ['B'],\n                'B': ['F']\n            }\n        }\n        break;\n        case '4x4x4':\n        case '5x5x5': {\n            moves = 40;\n            if(cube == '5x5x5'){moves = 60;}\n            layers = ['R', 'L', 'U', 'D', 'F', 'B', 'Rw', 'Lw', 'Uw', 'Dw', 'Fw', 'Bw'];\n            opposites = {\n                'R': ['L', 'Lw', 'Rw'],\n                'Rw': ['L', 'Lw', 'R'],\n                'L': ['R', 'Rw', 'Lw'],\n                'Lw': ['R', 'Rw', 'L'],\n                'U': ['D', 'Dw', 'Uw'],\n                'Uw': ['D', 'Dw', 'U'],\n                'D': ['U', 'Uw', 'Dw'],\n                'Dw': ['U', 'Uw', 'D'],\n                'F': ['B', 'Bw', 'Fw'],\n                'Fw': ['B', 'Bw', 'F'],\n                'B': ['F', 'Fw', 'Bw'],\n                'Bw': ['F', 'Fw', 'B']\n            }\n        }\n    }\n\n    return randomize(moves, layers, opposites, ['', '\\'', '2']);\n}\n\nconst pyraminx = () => {\n    let scramble = '';\n\n    let layers = ['R', 'L', 'U', 'B'];\n    let tips = ['r', 'l', 'u', 'b'];\n    let moves = 8;\n    let tipMoves;\n\n    tipMoves = Math.floor(Math.random()*5);\n    \n    scramble += randomize(moves, layers, false, ['', '\\'']);\n    scramble += randomize(tipMoves, tips, 'oneTime', ['', '\\'']);\n\n    return scramble;\n}\n\nconst Scrambler = (cube) => {\n    switch(cube){\n        case '2x2x2':\n        case '3x3x3':\n        case '4x4x4':\n        case '5x5x5': {\n            return cubic(cube);\n        }\n        break;\n        case 'pyraminx': {\n            return pyraminx();\n        }\n        break;\n    }\n}\n\nexport default Scrambler;","import React, {useState, useEffect} from 'react';\nimport './results.css';\nimport parseTime from '../parseTime.js';\n\nconst Results = (props) => {\n    const dropSolve = (id) => {\n        let newSolves = [...props.solves];\n        newSolves.splice(id, 1);\n        props.updateSolves(newSolves);\n    }\n\n    const penalty = (id) => {\n        let newSolves = [...props.solves];\n        newSolves[id].penalty = !newSolves[id].penalty;\n        props.updateSolves(newSolves);\n    }\n\n    const dnf = (id) => {\n        let newSolves = [...props.solves];\n        newSolves[id].dnf = !newSolves[id].dnf;\n        props.updateSolves(newSolves);\n    }\n\n    const mark = (id) => {\n        let newSolves = [...props.solves];\n        newSolves[id].marked = !newSolves[id].marked;\n        props.updateSolves(newSolves);\n    }\n\n    const solution = (id) => {\n        let newSolves = [...props.solves];\n        let sol = prompt('Enter solution: ', newSolves[id].solution);\n        if(sol != null){\n            newSolves[id].solution = sol;\n            props.updateSolves(newSolves);\n        }\n    }\n\n    const showSolution = (id) => {\n        if(props.solves[id].solution.length > 0){\n            return 'solution: '+props.solves[id].solution;\n        }\n    }\n\n    const toRender = () => {\n        let arrToRender = [...props.solves];\n        arrToRender.reverse();\n        return arrToRender;\n    }\n\n    let [markAll, setMarkAll] = useState(true);\n    useEffect(() => {\n        let newSolves = [...props.solves];\n        newSolves.map((solve) => {\n            solve.marked = markAll;\n        });\n        props.updateSolves(newSolves);\n    }, [markAll])\n\n    return (\n        <div className=\"results-container\">\n            <table className=\"results-table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Lp <input type=\"checkbox\" \n                            checked={markAll} \n                            onChange={()=>{setMarkAll(!markAll)}}/>\n                        </th>\n                        <th>scramble</th>\n                        <th>time</th>\n                        <th>+2</th>\n                        <th>DNF</th>\n                        <th>Result</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        toRender().map((solve, index) => {\n                            return (\n                                <tr key={props.solves.length - index}>\n                                    <td>\n                                        {props.solves.length - index}\n                                        <input type=\"checkbox\" \n                                        checked={solve.marked}\n                                        onChange={() => {mark(props.solves.length - index - 1)}}/>\n                                        <button onClick={() => {dropSolve(props.solves.length - index - 1)}}>Drop</button>\n                                    </td>\n                                    <td>\n                                        {solve.scramble}<button onClick={() => {solution(props.solves.length - index - 1)}}>add/edit solution</button><br/>\n                                        {showSolution(props.solves.length - index - 1)}\n                                    </td>\n                                    <td>{parseTime(solve.time)}</td>\n                                    <td>\n                                        <input type=\"checkbox\" \n                                        checked={solve.penalty}\n                                        onChange={() => {penalty(props.solves.length - index - 1)}}/>\n                                    </td>\n                                    <td>\n                                        <input type=\"checkbox\" \n                                        checked={solve.dnf}\n                                        onChange={() => {dnf(props.solves.length - index - 1)}}/>\n                                    </td>\n                                    <td>{parseTime(solve.result())}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Results;","const average = (solves) => {\n    if(solves.length >= 3){\n        let dnfs = 0;\n        do{\n            if(solves.indexOf('DNF')!=-1){\n                dnfs++;\n                solves.splice(solves.indexOf('DNF'), 1);\n            }\n        }while(solves.indexOf('DNF')!=-1);\n        if(dnfs >= 2){\n            return 'DNF';\n        } else {\n            solves.sort((a, b) => a-b);\n            if(dnfs==1){\n                solves.push('dnf');\n            }\n            let sum = 0;\n            for(let i=1; i<solves.length-1; i++){\n                sum += Math.floor(solves[i]/10)*10;\n            }\n            return sum/(solves.length-2);\n        }\n    } else {\n        return 0;\n    }\n}\n\nexport default average;","const mean = (solves) => {\n    if(solves.length >= 1){\n        if(solves.indexOf('DNF') != -1){\n            return 'DNF';\n        } else {\n            solves.sort((a, b) => a-b);\n            let sum = 0;\n            for(let i=0; i<solves.length; i++){\n                sum += Math.floor(solves[i]/10)*10;\n            }\n            return sum/(solves.length);\n        }\n    } else {\n        return 0;\n    }\n}\n\nexport default mean;","import React, {useState, useEffect} from 'react';\nimport './tools.css';\nimport average from '../average.js';\nimport mean from '../mean.js';\nimport parseTime from '../parseTime.js';\n\nconst Tools = (props) => {\n    // const [selectedCube, selectCube] = useState('3x3x3');\n\n    const cubeSelect = (e) => {\n        // selectCube(e.target.value);\n        props.cube(e.target.value);\n    }\n    // useEffect(() => {\n    //     if(props.cube.length === 0){\n    //         props.cube(selectedCube);\n    //     }\n    // }, [props.cube]);\n\n    const clearSession = () => {\n        if(window.confirm('Are you sure?')){\n            props.updateSolves([]);\n        }\n    }\n\n    const sessAvg = () => {\n        let times = props.solves.map((solve) => solve.result());\n        return average(times);\n    }\n\n    const sessMean = () => {\n        let times = props.solves.map((solve) => solve.result());\n        return mean(times);\n    }\n\n    const avgOf = (nr) => {\n        if(props.solves.length >= nr){\n            let times = props.solves.map((solve) => solve.result());\n            times.splice(0, times.length-nr);\n            return average(times);\n        } else {\n            return 0;\n        }\n    }\n\n    const meanOf = (nr) => {\n        if(props.solves.length >= nr){\n            let times = props.solves.map((solve) => solve.result());\n            times.splice(0, times.length-nr);\n            return mean(times);\n        } else {\n            return 0;\n        }\n    }\n\n    const csvExport = () => {\n        let toExport = 'Lp.,Scramble,Solution,Time,Result\\n';\n        let marked = props.solves.map((solve, index) => {\n            if(solve.marked){\n                let plus = ' ';\n                if(!solve.dnf && solve.penalty){plus='(+2)';}\n\n                let row = (index+1)+','+solve.scramble+','+solve.solution+','+parseTime(solve.time)+plus+','+parseTime(solve.result())+'\\n';\n                toExport += row;\n\n                return solve.result();\n            }\n        });\n        toExport += ',,,Average: ,'+parseTime(average(marked))+'\\n';\n        let toDown = document.createElement('a');\n        toDown.href = 'data:text/csv;charset=utf-8,' + encodeURI(toExport);\n        toDown.download = 'session.csv';\n        toDown.click();\n    }\n\n    return (\n        <div className=\"tools-container\">\n            <div className=\"tool\">\n                Cube: <select name=\"\" id=\"\" onChange={cubeSelect} defaultValue=\"3x3x3\">\n                    <option value=\"2x2x2\">2x2x2</option>\n                    <option value=\"3x3x3\">3x3x3</option>\n                    <option value=\"4x4x4\">4x4x4</option>\n                    <option value=\"5x5x5\">5x5x5</option>\n                    <option value=\"pyraminx\">pyraminx</option>\n                </select>\n            </div>\n            <div className=\"tool\">\n                Session Avg: {parseTime(sessAvg())}; Mean: {parseTime(sessMean())}\n            </div>\n            <div className=\"tool\">\n                Current Mo3: {parseTime(meanOf(3))}\n                <br/>\n                Current Avg5: {parseTime(avgOf(5))}\n                <br/>\n                Current Avg12: {parseTime(avgOf(12))}\n            </div>\n            <div className=\"tool\">\n                <button className=\"opt-button\" onClick={clearSession}>Clear Session</button>\n                <button className=\"opt-button\" onClick={csvExport}>Export selected to csv</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Tools;","import React, {useState, useEffect} from 'react';\nimport './drawCube.css';\n\nconst DrawCube = (props) => {\n    const createLayer = (color) => {\n        let rows = new Array();\n        for(let i=0; i<size; i++){\n            let columns = new Array();\n            for(let i=0; i<size; i++){\n                columns.push(color);\n            }\n            rows.push(columns);\n        }\n        return rows;\n    }\n\n    const generateCube = () => {\n        return {\n            'U': createLayer('white'),\n            'F': createLayer('green'),\n            'D': createLayer('yellow'),\n            'B': createLayer('blue'),\n            'R': createLayer('red'),\n            'L': createLayer('orange')\n        }\n    }\n\n    const copy2d = (from) =>{\n        let newArr = new Array(from.length);\n    \n        for(let i=0; i<from.length; i++){\n            newArr[i] = from[i].map(el => el);\n        }\n    \n        return newArr;\n    }\n\n    const [size, setSize] = useState(props.size);\n    const [cube, updateCube] = useState(generateCube);\n\n    const rotate = (layer, times) => {\n        let fromLayer = copy2d(layer);\n        for(let i=0; i<times; i++){\n            let newLayer = createLayer('x');\n            fromLayer.forEach((row, rIndex) => {\n                row.forEach((column, cIndex) => {\n                    newLayer[cIndex][size-1-rIndex] = column;\n                });\n            });\n            fromLayer = copy2d(newLayer);\n        }\n        return fromLayer;\n    }\n\n    const axis = (onCube, layer, deep, times) => {\n        let tempCube = {\n            'U': copy2d(onCube['U']),\n            'F': copy2d(onCube['F']),\n            'D': copy2d(onCube['D']),\n            'B': copy2d(onCube['B']),\n            'R': copy2d(onCube['R']),\n            'L': copy2d(onCube['L'])\n        }\n        for(let i=0; i<times; i++){\n            switch(layer){\n                case 'U':{\n                    let newF = copy2d(tempCube['R']);\n                    let newR = copy2d(tempCube['B']);\n                    let newB = copy2d(tempCube['L']);\n                    let newL = copy2d(tempCube['F']);\n    \n                    for(let i=0; i<deep; i++){\n                        tempCube['F'][i] = newF[i];\n                        tempCube['R'][i] = newR[i];\n                        tempCube['B'][i] = newB[i];\n                        tempCube['L'][i] = newL[i];\n                    }\n                }\n                break;\n                case 'D':{\n                    let newF = copy2d(tempCube['L']);\n                    let newR = copy2d(tempCube['F']);\n                    let newB = copy2d(tempCube['R']);\n                    let newL = copy2d(tempCube['B']);\n                    \n                    for(let i=0; i<deep; i++){\n                        tempCube['F'][size-1-i] = newF[size-1-i];\n                        tempCube['R'][size-1-i] = newR[size-1-i];\n                        tempCube['B'][size-1-i] = newB[size-1-i];\n                        tempCube['L'][size-1-i] = newL[size-1-i];\n                    }\n                }\n                break;\n                case 'R':{\n                    let newF = copy2d(tempCube['D']);\n                    let newU = copy2d(tempCube['F']);\n                    let newB = copy2d(tempCube['U']);\n                    let newD = copy2d(tempCube['B']);\n                    \n                    for(let j=0; j<size; j++){\n                        for(let i=0; i<deep; i++){\n                            tempCube['F'][j][size-1-i] = newF[j][size-1-i];\n                            tempCube['U'][j][size-1-i] = newU[j][size-1-i];\n                            tempCube['B'][j][i] = newB[size-1-j][size-1-i];\n                            tempCube['D'][j][size-1-i] = newD[size-1-j][i];\n                        }\n                    }\n                }\n                break;\n                case 'L':{\n                    let newF = copy2d(tempCube['U']);\n                    let newU = copy2d(tempCube['B']);\n                    let newB = copy2d(tempCube['D']);\n                    let newD = copy2d(tempCube['F']);\n                    \n                    for(let j=0; j<size; j++){\n                        for(let i=0; i<deep; i++){\n                            tempCube['F'][j][i] = newF[j][i];\n                            tempCube['U'][j][i] = newU[size-1-j][size-1-i];\n                            tempCube['B'][size-1-j][size-1-i] = newB[j][i];\n                            tempCube['D'][j][i] = newD[j][i];\n                        }\n                    }\n                }\n                break;\n                case 'F':{\n                    let newU = copy2d(rotate(tempCube['L'], 1));\n                    let newR = copy2d(rotate(tempCube['U'], 1));\n                    let newD = copy2d(rotate(tempCube['R'], 1));\n                    let newL = copy2d(rotate(tempCube['D'], 1));\n                    \n                    for(let i=0; i<deep; i++){\n                        for(let j=0; j<size; j++){\n                            tempCube['U'][size-1-i][j] = newU[size-1-i][j];\n                            tempCube['R'][j][i] = newR[j][i];\n                            tempCube['D'][i][j] = newD[i][j];\n                            tempCube['L'][size-1-j][size-1-i] = newL[size-1-j][size-1-i];\n                        }\n                    }\n                }\n                break;\n                case 'B':{\n                    let newU = copy2d(rotate(tempCube['R'], 3));\n                    let newR = copy2d(rotate(tempCube['D'], 3));\n                    let newD = copy2d(rotate(tempCube['L'], 3));\n                    let newL = copy2d(rotate(tempCube['U'], 3));\n                    \n                    for(let i=0; i<deep; i++){\n                        for(let j=0; j<size; j++){\n                            tempCube['U'][i][j] = newU[i][j];\n                            tempCube['R'][size-1-j][size-1-i] = newR[size-1-j][size-1-i];\n                            tempCube['D'][size-1-i][j] = newD[size-1-i][j];\n                            tempCube['L'][j][i] = newL[j][i];\n                        }\n                    }\n                }\n                break;\n            }\n        }\n        return tempCube;\n    }\n\n    const move = (onCube, layer, deep, times) => {\n        let tempCube = axis(onCube, layer, deep, times);\n        tempCube[layer] = rotate(tempCube[layer], times);\n        return tempCube;\n    }\n\n    const parseMove = (mv) => {\n        let layer;\n        let deep;\n        let times;\n        if(mv.indexOf('w') !== -1){\n            layer = mv[mv.indexOf('w')-1];\n            if(!isNaN(mv[0])){\n                deep = mv[0];\n            } else {\n                deep = 2;\n            }\n        } else {\n            layer = mv[0];\n            deep = 1;\n        }\n        if(mv[mv.length-1]===`'`){\n            times = 3;\n        } else if(mv[mv.length-1]===`2`){\n            times = 2;\n        } else {\n            times = 1;\n        }\n        return [layer, deep, times];\n    }\n\n    const doScramble = (scrmbl) => {\n        let tempCube = generateCube();\n        let mvs = scrmbl.split(' ');\n        mvs.pop();\n        mvs.forEach(mv => {\n            let parsed = parseMove(mv);\n            tempCube = move(tempCube, parsed[0], parsed[1], parsed[2]);\n        });\n        updateCube(tempCube);\n    }\n\n    useEffect(() => {\n        updateCube(generateCube());\n    }, [size]);\n\n    useEffect(() => {\n        doScramble(props.scramble);\n    }, [props.scramble]);\n\n    useEffect(() => {\n        setSize(props.size);\n    }, [props.size]);\n    \n    return (\n        <div className=\"drawcube-container\">\n\n            {\n                Object.keys(cube).map(layer => {\n                    return(\n                        <div \n                        className={`layer layer-${layer}`} \n                        style={{gridTemplateColumns: `repeat(${size}, 1fr)`, gridTemplateRows: `repeat(${size}, 1fr)`}} >\n                            {\n                                cube[layer].map(row => {\n                                    return row.map(color => {\n                                        return(\n                                            <div className=\"tile\" style={{backgroundColor: color}}></div>\n                                        )\n                                    })\n                                })\n                            }\n                        </div>\n                    )\n                })\n            }\n            \n        </div>\n    )\n}\n\nexport default DrawCube;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Timer from './components/timer/timer.js';\nimport Header from './components/header/header.js';\nimport Scrambler from './components/scrambler/scrambler.js';\nimport Results from './components/results/results.js';\nimport Tools from './components/tools/tools.js';\nimport DrawCube from './components/drawCube/drawCube.js';\n\nfunction App() {\n  const [solves, updateSolves] = useState([]);\n  const [scramble, generateScramble] = useState('');\n  const [cubeType, setCubeType] = useState('3x3x3');\n  const [cubeDisplay, setDisplay] = useState('block');\n  const [cubeShown, setClass] = useState('shown');\n\n  const addSolve = (time) => {\n    let solve = {\n      marked: true,\n      scramble: scramble,\n      solution: '',\n      time: time,\n      penalty: false,\n      dnf: false,\n      result: function(){\n        if(this.dnf){return 'DNF';}\n        else if(this.penalty){return this.time+2000;}\n        else{return this.time;}\n      }\n    }\n\n    updateSolves([...solves, solve]);\n    generateScramble(Scrambler(cubeType));\n  }\n\n  useEffect(() => {\n    generateScramble(Scrambler(cubeType));\n  }, []);\n\n  useEffect(() => {\n    setDisplay('none');\n    if(cubeType != 'pyraminx'){\n      setTimeout(function(){\n        setDisplay('block');\n      }, 100);\n    }\n  }, [cubeType]);\n\n\n  useEffect(() => {\n    if(cubeDisplay === 'block'){\n      generateScramble(Scrambler(cubeType));\n    }\n  }, [cubeDisplay]);\n\n  const cubeSize = () => {\n    return parseInt(cubeType.split('x')[0]);\n  }\n\n  const renderCube = () => {\n    // if(cubeType.length > 0){\n      return(<DrawCube scramble={scramble} size={cubeSize()}/>);\n    // }\n  }\n\n  const showHideBtn = () => {\n    if(cubeShown === 'shown'){\n      return '>';\n    } else {\n      return '<';\n    }\n  }\n\n  const showHideCube = () => {\n    if(cubeShown === 'shown'){\n      setClass('hidden');\n    } else {\n      setClass('shown');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n      <main>\n        <div className=\"main-content\">\n          <div className=\"timer\">\n            <Timer addTime={addSolve}/>\n          </div>\n          <div className=\"tools\">\n            <Tools cube={setCubeType} solves={solves} updateSolves={updateSolves}/>\n          </div>\n        </div>\n        <div className=\"scramble\">\n          scramble: { scramble }\n        </div>\n      </main>\n      <section className=\"results-table\">\n        <Results solves={solves} updateSolves={updateSolves}/>\n      </section>\n      <aside className={`draw-cube ${cubeShown}`} style={{display: cubeDisplay}}>\n        <div className=\"show-cube\" onClick={() => {showHideCube()}}>\n          {\n            showHideBtn()\n          }\n        </div>\n        {\n          renderCube()\n        }\n      </aside>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}